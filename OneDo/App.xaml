<Application x:Class="OneDo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="using:OneDo.View.Converters"
             xmlns:vm="using:OneDo.ViewModel"
             RequestedTheme="Light">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <Color x:Key="FlagForegroundColor">#E32A34</Color>
                    <Color x:Key="FlagBackgroundColor">#FFFFCC</Color>
                    <SolidColorBrush x:Key="FlagForegroundBrush" Color="{ThemeResource FlagForegroundColor}" />
                    <SolidColorBrush x:Key="FlagBackgroundBrush" Color="{ThemeResource FlagBackgroundColor}" />
                    <SolidColorBrush x:Key="ModalContainerBackgroundBrush" Color="{ThemeResource SystemBaseMediumLowColor}" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <Color x:Key="FlagForegroundColor">#1cd5cb</Color>
                    <Color x:Key="FlagBackgroundColor">#000033</Color>
                    <SolidColorBrush x:Key="FlagForegroundBrush" Color="{ThemeResource FlagForegroundColor}" />
                    <SolidColorBrush x:Key="FlagBackgroundBrush" Color="{ThemeResource FlagBackgroundColor}" />
                    <SolidColorBrush x:Key="ModalContainerBackgroundBrush" Color="{ThemeResource SystemAltMediumColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/TextBoxStyles.xaml" />
                <ResourceDictionary Source="Themes/FlyoutMenuStyles.xaml" />
                <ResourceDictionary Source="Themes/AppBarStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <x:Double x:Key="SmallWidthBreakpoint">0</x:Double>
            <x:Double x:Key="MediumWidthBreakpoint">600</x:Double>
            <x:Double x:Key="LargeWidthBreakpoint">800</x:Double>

            <x:Double x:Key="SmallHeightBreakpoint">0</x:Double>
            <x:Double x:Key="MediumHeightBreakpoint">500</x:Double>

            <vm:ViewModelLocator x:Key="Locator" />

            <converters:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:ChangeTypeConverter x:Key="ChangeTypeConverter" />
            <converters:StringFormatConverter x:Key="StringFormatConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:ConditionConverter x:Key="NotNullToVisibilityConverter" If="{x:Null}">
                <converters:ConditionConverter.Then>
                    <Visibility>Collapsed</Visibility>
                </converters:ConditionConverter.Then>
                <converters:ConditionConverter.Else>
                    <Visibility>Visible</Visibility>
                </converters:ConditionConverter.Else>
            </converters:ConditionConverter>
            <converters:ConditionConverter x:Key="NullToVisibilityConverter" If="{x:Null}">
                <converters:ConditionConverter.Then>
                    <Visibility>Visible</Visibility>
                </converters:ConditionConverter.Then>
                <converters:ConditionConverter.Else>
                    <Visibility>Collapsed</Visibility>
                </converters:ConditionConverter.Else>
            </converters:ConditionConverter>
            <converters:ConditionConverter x:Key="NotNullToBoolConverter" If="{x:Null}">
                <converters:ConditionConverter.Then>
                    <x:Boolean>False</x:Boolean>
                </converters:ConditionConverter.Then>
                <converters:ConditionConverter.Else>
                    <x:Boolean>True</x:Boolean>
                </converters:ConditionConverter.Else>
            </converters:ConditionConverter>
            <converters:ConditionConverter x:Key="ZeroToVisibilityConverter">
                <converters:ConditionConverter.If>
                    <x:Int32>0</x:Int32>
                </converters:ConditionConverter.If>
                <converters:ConditionConverter.Then>
                    <Visibility>Visible</Visibility>
                </converters:ConditionConverter.Then>
                <converters:ConditionConverter.Else>
                    <Visibility>Collapsed</Visibility>
                </converters:ConditionConverter.Else>
            </converters:ConditionConverter>

            <Style x:Key="HorizontalLineStyle" TargetType="Rectangle">
                <Setter Property="Height" Value="1" />
                <Setter Property="Fill" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
            </Style>



            <Style TargetType="TimePickerFlyoutPresenter">
                <Setter Property="Width" Value="150" />
                <Setter Property="MinWidth" Value="150" />
                <Setter Property="MaxWidth" Value="150" />
                <Setter Property="MaxHeight" Value="398" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Background" Value="Red" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>

</Application>
