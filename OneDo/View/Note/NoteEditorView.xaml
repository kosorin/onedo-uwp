<vcore:ModalView x:Class="OneDo.View.Note.NoteEditorView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:behaviors="using:OneDo.View.Behaviors"
                 xmlns:controls="using:OneDo.View.Controls"
                 xmlns:converters="using:OneDo.View.Converters"
                 xmlns:i="using:Microsoft.Xaml.Interactivity"
                 xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
                 xmlns:im="using:Microsoft.Xaml.Interactions.Media"
                 xmlns:vcore="using:OneDo.View.Core"
                 xmlns:vmfolder="using:OneDo.ViewModel.Folder"
                 x:Name="Root"
                 d:DesignHeight="640"
                 d:DesignWidth="360"
                 DataContext="{Binding NoteEditor, Source={StaticResource Locator}}"
                 mc:Ignorable="d">

    <vcore:ModalView.Resources>

        <converters:ConditionConverter x:Key="TitleBackgroundConverter">
            <converters:ConditionConverter.If>
                <x:Boolean>True</x:Boolean>
            </converters:ConditionConverter.If>
            <converters:ConditionConverter.Then>
                <SolidColorBrush Color="{ThemeResource FlagBackgroundColor}" />
            </converters:ConditionConverter.Then>
            <converters:ConditionConverter.Else>
                <SolidColorBrush Color="{ThemeResource SystemChromeMediumLowColor}" />
            </converters:ConditionConverter.Else>
        </converters:ConditionConverter>

        <converters:ConditionConverter x:Key="PickerForegroundConverter" If="{x:Null}">
            <converters:ConditionConverter.Then>
                <SolidColorBrush Color="{ThemeResource SystemBaseMediumColor}" />
            </converters:ConditionConverter.Then>
            <converters:ConditionConverter.Else>
                <SolidColorBrush Color="{ThemeResource SystemBaseHighColor}" />
            </converters:ConditionConverter.Else>
        </converters:ConditionConverter>

        <Style x:Key="FlagButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ContentControlFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              AutomationProperties.AccessibilityView="Raw"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlagForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlagForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlagForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GlyphButtonPickerStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="48" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="0,5,0,7" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="12b" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <FontIcon FontSize="{TemplateBinding FontSize}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Glyph="{TemplateBinding Tag}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonPickerStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="0,5,0,7" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <FontIcon Grid.Column="0"
                                      FontSize="16"
                                      Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                      Glyph="{TemplateBinding Tag}" />
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              AutomationProperties.AccessibilityView="Raw"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxPickerStyle" TargetType="ComboBox">
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="0,5,0,7" />
            <Setter Property="Foreground" Value="{ThemeResource ComboBoxForeground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <CarouselPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <FontIcon FontSize="16"
                                  Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                  Glyph="{Binding}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="LayoutRoot">
                            <Grid.Resources>
                                <Storyboard x:Key="OverlayOpeningAnimation">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0"
                                                              KeyTime="0:0:0.383"
                                                              Value="1.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OverlayClosingAnimation">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                        <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1.0"
                                                              KeyTime="0:0:0.216"
                                                              Value="0.0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="48" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Background"
                                    Grid.Row="1"
                                    Grid.ColumnSpan="3"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            <Border x:Name="HighlightBackground"
                                    Grid.Row="1"
                                    Grid.ColumnSpan="3"
                                    Background="{ThemeResource ComboBoxBackgroundUnfocused}"
                                    BorderBrush="{ThemeResource ComboBoxBackgroundBorderBrushUnfocused}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="0" />
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Row="1"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock x:Name="PlaceholderTextBlock"
                                           Foreground="{ThemeResource ComboBoxPlaceHolderForeground}"
                                           Text="{TemplateBinding PlaceholderText}" />
                            </ContentPresenter>
                            <ContentPresenter x:Name="HeaderContentPresenter"
                                              Grid.Row="1"
                                              Grid.Column="0"
                                              x:DeferLoadStrategy="Lazy"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              IsHitTestVisible="False"
                                              Visibility="Collapsed" />
                            <FontIcon x:Name="DropDownGlyph"
                                      Grid.Row="1"
                                      Grid.Column="2"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      AutomationProperties.AccessibilityView="Raw"
                                      FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                      FontSize="12"
                                      Foreground="{ThemeResource ComboBoxDropDownGlyphForeground}"
                                      Glyph="&#xE0E5;"
                                      IsHitTestVisible="False" />
                            <Popup x:Name="Popup" Margin="36,0,128,0">
                                <Border x:Name="PopupBorder"
                                        Margin="0,-1,0,-1"
                                        HorizontalAlignment="Stretch"
                                        Background="{ThemeResource ComboBoxDropDownBackground}"
                                        BorderBrush="{ThemeResource ComboBoxDropDownBorderBrush}"
                                        BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}">
                                    <ScrollViewer x:Name="ScrollViewer"
                                                  MinWidth="{Binding TemplateSettings.DropDownContentMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                  AutomationProperties.AccessibilityView="Raw"
                                                  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                                  Foreground="{ThemeResource ComboBoxDropDownForeground}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                                  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                  VerticalSnapPointsAlignment="Near"
                                                  VerticalSnapPointsType="OptionalSingle"
                                                  ZoomMode="Disabled">
                                        <ItemsPresenter Margin="{ThemeResource ComboBoxDropdownContentMargin}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundBorderBrushFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="FocusedPressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocusedPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPlaceHolderForegroundFocusedPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                    <VisualState x:Name="FocusedDropDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                           Storyboard.TargetProperty="Visibility"
                                                                           Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DropDownStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
                                                                     OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                     OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                     OpenedTargetName="PopupBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed">
                                        <Storyboard>
                                            <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
                                                                      OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                      OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                                      OpenedTargetName="PopupBorder" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarViewDayItemStyle" TargetType="CalendarViewDayItem">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CalendarViewDayItem" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarViewStyle" TargetType="CalendarView">
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="CalendarViewDayItemStyle" Value="{StaticResource CalendarViewDayItemStyle}" />
            <Setter Property="DayItemFontSize" Value="12" />
            <Setter Property="FocusBorderBrush" Value="{ThemeResource CalendarViewFocusBorderBrush}" />
            <Setter Property="SelectedHoverBorderBrush" Value="{ThemeResource CalendarViewSelectedHoverBorderBrush}" />
            <Setter Property="SelectedPressedBorderBrush" Value="{ThemeResource CalendarViewSelectedPressedBorderBrush}" />
            <Setter Property="SelectedBorderBrush" Value="{ThemeResource CalendarViewSelectedBorderBrush}" />
            <Setter Property="HoverBorderBrush" Value="{ThemeResource CalendarViewHoverBorderBrush}" />
            <Setter Property="PressedBorderBrush" Value="{ThemeResource CalendarViewPressedBorderBrush}" />
            <Setter Property="TodayForeground" Value="{ThemeResource CalendarViewTodayForeground}" />
            <Setter Property="BlackoutForeground" Value="{ThemeResource CalendarViewBlackoutForeground}" />
            <Setter Property="SelectedForeground" Value="{ThemeResource CalendarViewSelectedForeground}" />
            <Setter Property="PressedForeground" Value="{ThemeResource CalendarViewPressedForeground}" />
            <Setter Property="OutOfScopeForeground" Value="{ThemeResource CalendarViewOutOfScopeForeground}" />
            <Setter Property="CalendarItemForeground" Value="{ThemeResource CalendarViewCalendarItemForeground}" />
            <Setter Property="OutOfScopeBackground" Value="{ThemeResource CalendarViewOutOfScopeBackground}" />
            <Setter Property="CalendarItemBackground" Value="{ThemeResource CalendarViewCalendarItemBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource CalendarViewForeground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{ThemeResource CalendarViewBorderBrush}" />
            <Setter Property="CalendarItemBorderThickness" Value="2" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style x:Key="QuickButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="32" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Background" Value="{ThemeResource CalendarViewNavigationButtonBackground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="Text"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewNavigationButtonForegroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarViewNavigationButtonForegroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DatePickerStyle" TargetType="controls:CalendarDatePicker">
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Background" Value="{ThemeResource CalendarDatePickerBackground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource CalendarDatePickerBorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="32" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <FontIcon FontSize="16"
                                  Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                  Glyph="{Binding}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:CalendarDatePicker">
                        <Grid x:Name="Root" Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderContentPresenter"
                                                  x:DeferLoadStrategy="Lazy"
                                                  Content="{TemplateBinding UnselectedHeader}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  IsHitTestVisible="False"
                                                  Visibility="Collapsed" />
                                <TextBlock x:Name="DateText"
                                           Grid.Column="1"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="{ThemeResource CalendarDatePickerTextForeground}"
                                           Text="{TemplateBinding PlaceholderText}" />
                                <Button x:Name="PreviousDayButton"
                                        Grid.Column="2"
                                        FontSize="16"
                                        Style="{StaticResource GlyphButtonPickerStyle}"
                                        Tag="&#xE09A;"
                                        Visibility="{Binding Date, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                                <Button x:Name="NextDayButton"
                                        Grid.Column="3"
                                        FontSize="16"
                                        Style="{StaticResource GlyphButtonPickerStyle}"
                                        Tag="&#xE09B;"
                                        Visibility="{Binding Date, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                                <Button x:Name="ClearButton"
                                        Grid.Column="4"
                                        Style="{StaticResource GlyphButtonPickerStyle}"
                                        Tag="&#xE10A;"
                                        Visibility="{Binding Date, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}" />
                            </Grid>
                            <FlyoutBase.AttachedFlyout>
                                <Flyout Placement="Left">
                                    <Flyout.FlyoutPresenterStyle>
                                        <Style TargetType="FlyoutPresenter">
                                            <Setter Property="Padding" Value="0" />
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="FlyoutPresenter">
                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          ContentTransitions="{TemplateBinding ContentTransitions}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Flyout.FlyoutPresenterStyle>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <CalendarView x:Name="CalendarView"
                                                      CalendarIdentifier="{TemplateBinding CalendarIdentifier}"
                                                      DayOfWeekFormat="{TemplateBinding DayOfWeekFormat}"
                                                      DisplayMode="{TemplateBinding DisplayMode}"
                                                      FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                                                      IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}"
                                                      IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}"
                                                      IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                                                      MaxDate="{TemplateBinding MaxDate}"
                                                      MinDate="{TemplateBinding MinDate}"
                                                      Style="{TemplateBinding CalendarViewStyle}" />
                                        <Grid Grid.Row="1"
                                              BorderBrush="{ThemeResource SystemControlForegroundChromeHighBrush}"
                                              BorderThickness="0,1,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="TodayButton"
                                                    Grid.Column="0"
                                                    Content="Today"
                                                    Style="{StaticResource QuickButtonStyle}" />
                                            <Button x:Name="TomorrowButton"
                                                    Grid.Column="1"
                                                    Content="Tomorrow"
                                                    Style="{StaticResource QuickButtonStyle}" />
                                            <Button x:Name="EndOfWeekButton"
                                                    Grid.Row="1"
                                                    Grid.Column="0"
                                                    Content="This week"
                                                    Style="{StaticResource QuickButtonStyle}" />
                                            <Button x:Name="EndOfNextWeekButton"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Content="Next week"
                                                    Style="{StaticResource QuickButtonStyle}" />
                                        </Grid>
                                    </Grid>
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DateText" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Header, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </vcore:ModalView.Resources>

    <Grid x:Name="RootGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <!--  Title  -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="48" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.ColumnSpan="2" Fill="{x:Bind VM.IsFlagged, Mode=OneWay, Converter={StaticResource TitleBackgroundConverter}}" />
                    <TextBox x:Name="TitleTextBox"
                             Grid.Column="0"
                             Margin="16,6,0,4"
                             VerticalAlignment="Center"
                             FontSize="18"
                             FontWeight="Medium"
                             PlaceholderText="Title"
                             Style="{StaticResource BorderlessTextBoxStyle}"
                             Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap" />
                    <ToggleButton Grid.Column="1"
                                  IsChecked="{x:Bind VM.IsFlagged, Mode=TwoWay}"
                                  Style="{StaticResource FlagButtonStyle}">
                        <FontIcon FontSize="16" Glyph="&#xE7C1;" />
                    </ToggleButton>
                </Grid>
                <Rectangle Style="{StaticResource HorizontalLineStyle}" />

                <!--  Folder  -->
                <ComboBox x:Name="FolderComboBox"
                          Margin="0,8"
                          ItemsSource="{x:Bind VM.Folders, Mode=OneWay}"
                          SelectedItem="{x:Bind VM.SelectedFolder, Mode=TwoWay, Converter={StaticResource ChangeTypeConverter}}"
                          Style="{StaticResource ComboBoxPickerStyle}">
                    <ComboBox.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <FontIcon FontSize="16"
                                          Foreground="{Binding SelectedItem.Color, ElementName=FolderComboBox, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"
                                          Glyph="&#xE188;"
                                          Opacity="0.75" />
                                <FontIcon FontSize="16"
                                          Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                          Glyph="&#xE8B7;" />
                            </Grid>
                        </DataTemplate>
                    </ComboBox.HeaderTemplate>
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="vmfolder:FolderItemViewModel">
                            <TextBlock Foreground="{x:Bind Color, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}" Text="{x:Bind Name, Mode=OneWay}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Rectangle Margin="48,0,0,0" Style="{StaticResource HorizontalLineStyle}" />

                <!--  Reminder  -->
                <StackPanel Margin="0,8">
                    <controls:CalendarDatePicker x:Name="ReminderDatePicker"
                                                 Grid.ColumnSpan="5"
                                                 CalendarViewStyle="{StaticResource CalendarViewStyle}"
                                                 Date="{x:Bind VM.ReminderDate, Mode=TwoWay}"
                                                 Header="&#xE787;"
                                                 PlaceholderText="Set reminder"
                                                 Style="{StaticResource DatePickerStyle}"
                                                 UnselectedHeader="&#xEA8F;" />
                    <Button Margin="0,8,0,0"
                            Content="{x:Bind VM.ReminderTime, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='\{0:t}'}"
                            Style="{StaticResource ButtonPickerStyle}"
                            Tag="&#xE121;"
                            Visibility="{x:Bind VM.ReminderDate, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}">
                        <Button.Flyout>
                            <TimePickerFlyout Placement="Bottom" TimePicked="TimePickerFlyout_TimePicked" />
                        </Button.Flyout>
                    </Button>
                    <StackPanel Margin="0,8,0,0" Visibility="{x:Bind VM.ReminderDate, Mode=OneWay, Converter={StaticResource NotNullToVisibilityConverter}}">
                        <ComboBox Header="&#xE149;" Style="{StaticResource ComboBoxPickerStyle}" />
                    </StackPanel>
                </StackPanel>
                <Rectangle Margin="48,0,0,0" Style="{StaticResource HorizontalLineStyle}" />

                <!--  Note  -->
                <Grid Grid.Row="1" Margin="0,8,0,4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <FontIcon Grid.Row="0"
                              Grid.Column="0"
                              Height="32"
                              VerticalAlignment="Top"
                              FontSize="16"
                              Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                              Glyph="&#xE104;" />
                    <TextBox Grid.RowSpan="2"
                             Grid.Column="1"
                             Margin="0,0,16,0"
                             AcceptsReturn="True"
                             PlaceholderText="Note"
                             Style="{StaticResource BorderlessTextBoxStyle}"
                             Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap" />
                </Grid>
            </StackPanel>
        </ScrollViewer>

        <CommandBar Grid.Row="1">
            <CommandBar.PrimaryCommands>
                <AppBarButton Command="{x:Bind VM.SaveCommand, Mode=OneWay}" Label="Save">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE74E;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Command="{x:Bind VM.DeleteCommand, Mode=OneWay}"
                              Label="Delete"
                              Visibility="{x:Bind VM.IsNew, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=!}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE74D;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="{StaticResource MediumHeightBreakpoint}" MinWindowWidth="{StaticResource MediumWidthBreakpoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Root.HorizontalAlignment" Value="Right" />
                        <Setter Target="Root.VerticalAlignment" Value="Bottom" />
                        <Setter Target="Root.Width" Value="400" />
                        <Setter Target="Root.MinHeight" Value="480" />
                        <Setter Target="Root.MaxHeight" Value="800" />
                        <Setter Target="Root.MaxHeight" Value="800" />
                        <Setter Target="Root.Margin" Value="16,16,16,0" />
                        <Setter Target="RootGrid.BorderThickness" Value="1,1,1,0" />
                        <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallWidthBreakpoint}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</vcore:ModalView>
