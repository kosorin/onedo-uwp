<v:ModalBase x:Class="OneDo.View.Modals.NoteEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="using:OneDo.View.Controls"
             xmlns:i="using:Microsoft.Xaml.Interactivity"
             xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
             xmlns:im="using:Microsoft.Xaml.Interactions.Media"
             xmlns:v="using:OneDo.View"
             xmlns:vmItems="using:OneDo.ViewModel.Items"
             d:DesignHeight="640"
             d:DesignWidth="360"
             mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ScrollViewer>
            <StackPanel Margin="16">
                <ComboBox Margin="0,0,0,16"
                          HorizontalAlignment="Stretch"
                          Header="Folder"
                          ItemsSource="{x:Bind VM.Folders}"
                          SelectedItem="{x:Bind VM.SelectedFolder, Mode=TwoWay, Converter={StaticResource ChangeTypeConverter}}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="vmItems:FolderItemObject">
                            <TextBlock Text="{x:Bind Name, Mode=OneWay}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBox Margin="0,0,0,16"
                         Header="Title"
                         Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Margin="0,0,0,16"
                         Header="Note"
                         Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <controls:CustomCalendarView Margin="0,0,0,16"
                                             HorizontalAlignment="Stretch"
                                             SelectedDate="{x:Bind VM.Date, Mode=TwoWay}" />
                <TimePicker Margin="0,0,0,16"
                            HorizontalAlignment="Stretch"
                            Header="Reminder"
                            Time="{x:Bind VM.Reminder, Mode=TwoWay}" />
            </StackPanel>
        </ScrollViewer>

        <CommandBar Grid.Row="1">
            <CommandBar.PrimaryCommands>
                <AppBarToggleButton IsChecked="{x:Bind VM.IsFlagged, Mode=TwoWay}"
                                    Label="Flag"
                                    Visibility="{x:Bind VM.IsNew, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=!}">
                    <AppBarToggleButton.Icon>
                        <FontIcon Glyph="&#xE7C1;" />
                    </AppBarToggleButton.Icon>
                </AppBarToggleButton>
                <AppBarButton Command="{x:Bind VM.SaveCommand, Mode=OneWay}" Label="Save">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE74E;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="Delete" Visibility="{x:Bind VM.IsNew, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=!}">
                    <AppBarButton.Flyout>
                        <Flyout PickerFlyoutBase.Title="Test">
                            <StackPanel>
                                <TextBlock Margin="0,0,0,10" Text="To-do will be deleted. Do you want to continue?" />
                                <Button Command="{x:Bind VM.DeleteCommand, Mode=OneWay}" Content="Yes, delete to-do" />
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE74D;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Grid>
</v:ModalBase>
